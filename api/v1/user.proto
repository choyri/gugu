syntax = "proto3";

package choyri.gugu.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/choyri/gugu/api/v1;apiv1";

service UserService {
  rpc ListUsers(google.protobuf.Empty) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }

  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/v1/{name=users/*}"
    };
  }

  rpc CreateUser(CreateUserRequest) returns (User) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "user"
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (User) {
    option (google.api.http) = {
      patch: "/v1/{user.name=users/*}"
      body: "user"
    };
  }
}

message User {
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  string user_id = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  string display_name = 3 [(google.api.field_behavior) = OPTIONAL];
  string password = 4 [(google.api.field_behavior) = INPUT_ONLY];

  google.protobuf.Timestamp create_time = 11 [(google.api.field_behavior) = OUTPUT_ONLY];
  google.protobuf.Timestamp update_time = 12 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message ListUsersResponse {
  repeated User users = 1;
}

message GetUserRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message CreateUserRequest {
  string user_id = 1 [(google.api.field_behavior) = REQUIRED];
  User user = 2 [(google.api.field_behavior) = REQUIRED];
}

message UpdateUserRequest {
  User user = 1 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

message DeleteUserRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}
